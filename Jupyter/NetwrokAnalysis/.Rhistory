save.image("~/Dropbox/CHICAGO_PostDoc/Academics/CRISPR_ANALYSIS_PipeLine/Jupyter/NetwrokAnalysis/NetwrokAnalysisDebug.RData")
library(tidyverse)
library(magrittr)
library(bipartite)
library(vegan)
library(RColorBrewer)
library(igraph)
source('Functions.R')
T=300
prefix="mu1e-7_initialDiffDp1_S10P15_R-12499"
bacteriaFile=paste(prefix,"_data-bact.txt",sep="")
virusFile=paste(prefix,"_data-phage.txt",sep="")
system(paste('python BuildNetworks_v12.py',virusFile,' ',bacteriaFile,' ',T))
argument = paste('Protospacers-by-virus_',prefix,'_Time_',T,'.txt',sep="")
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
title = paste('Proto Spacer Aquisition Network from Simlated Data','\n','Time = ',T,sep="");
#plot_matrix(network, layout = 'nested', method = 'ggplot', binary_cols = c('white','darkgreen'), title=title, x_title='Proto Spacers', y_title='Virus strains')+theme(legend.position = 'none');
suppressMessages(suppressWarnings(plot_matrix(network, l
)
'
suppressMessages(suppressWarnings(plot_matrix(network, layout = 'nested', method = 'ggplot', binary_cols = c('white','darkgreen'), title=title, x_title='Proto Spacers', y_title='Virus strains')+theme(legend.position = 'none')));
argument = paste('Protospacers-by-virus_',prefix,'_Time_',T,'.txt',sep="")
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
title = paste('Proto Spacer Aquisition Network from Simlated Data','\n','Time = ',T,sep="");
#plot_matrix(network, layout = 'nested', method = 'ggplot', binary_cols = c('white','darkgreen'), title=title, x_title='Proto Spacers', y_title='Virus strains')+theme(legend.position = 'none');
suppressMessages(suppressWarnings(plot_matrix(network, layout = 'nested', method = 'ggplot', binary_cols = c('white','darkgreen'), title=title, x_title='Proto Spacers', y_title='Virus strains')+theme(legend.position = 'none')));
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = prefix)
argument
network
library(tidyverse)
library(magrittr)
library(bipartite)
library(vegan)
library(RColorBrewer)
library(igraph)
source('Functions.R')
argument
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
network
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
name="algo"
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
network
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
argument
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
name
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
getwd()
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
getwd()
source('Functions.R')
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
library(tidyverse)
library(magrittr)
library(bipartite)
library(vegan)
library(RColorBrewer)
library(igraph)
source('Functions.R')
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
R.version
network
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
name
name
argument
argument="Protospacers-by-virus_mu1e-7_initialDiffDp1_S10P15_R-12499_Time_300.txt"
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
getwd()
system('ls')
library(tidyverse)
library(magrittr)
library(bipartite)
library(vegan)
library(RColorBrewer)
library(igraph)
source('Functions.R')
argument="Protospacers-by-virus_mu1e-7_initialDiffDp1_S10P15_R-12499_Time_300.txt"
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
protospacer_by_virus <- load_bipartite_file_1(argument,'\t')
protospacer_by_virus <- protospacer_by_virus[,str_detect(colnames(protospacer_by_virus), 'Ps_')]
protospacer_by_virus <- incidence_matrix_to_list(protospacer_by_virus)
network <- protospacer_by_virus$M
network <- t(network)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
any(grepl("RStudio", .libPaths()))
isRStudio <- Sys.getenv("RSTUDIO") == "1"
any(grepl("RStudio", .libPaths()))
R
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
write_infomap(Z, node_data, is_bipartite = T, directed = F, file_obs)
write_infomap(network, node_data, is_bipartite = T, directed = F, file_obs)
node_data
node_data
node_data <- get_node_data_infomap(network, is_bipartite = T, bipartite_groups = bipartite_groups)
node_data <- get_node_data_infomap(network, is_bipartite = T, bipartite_groups = c('ProtoSpacer','Virus'),)
node_data <- get_node_data_infomap(network, is_bipartite = T, bipartite_groups = c('ProtoSpacer','Virus'))
node_data
file_obs <- paste("algo",'_Infomap.txt',sep='')
write_infomap(Z, node_data, is_bipartite = T, directed = F, file_obs)
write_infomap(network, node_data, is_bipartite = T, directed = F, file_obs)
g <- graph.incidence(network, directed = directed, mode = 'all', weighted = T)
links <- igraph::as_data_frame(g, what = 'edges')
g <- graph.incidence(network, directed = directed, mode = 'all', weighted = T)
g <- graph.incidence(network, directed = directed, mode = 'all', weighted = T)
g <- graph.incidence(network, directed=F, mode = 'all', weighted = T)
g <- graph.incidence(network, directed=F, mode = 'all', weighted = 'T')
g <- graph.incidence(network, directed=F, mode = 'all', weighted = T)
graph.incidence(incidence = incidence)
graph.incidence?
)
?graph.incidence
g <- graph.incidence(network, directed=F, mode = 'all', weighted = TRUE)
g <- graph.incidence(network, directed=F, mode = 'all', weighted = T)
g <- graph.incidence(network, directed=F, mode = 'all', weighted = TRUE)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
g <- graph.incidence(network, directed=F, mode = 'all', weighted = TRUE)
links <- igraph::as_data_frame(g, what = 'edges')
links$from <- node_data$runningID[match(links$from, node_data$nodeName)]
links$to <- node_data$runningID[match(links$to, node_data$nodeName)]
unlink(filename)
sink(filename, append = T)
if(is_bipartite){
cat("# A bipartite network parsed as AA^T matrix");cat('\n')
} else {
cat("# A unipartite network");cat('\n')
}
unlink(filename)
sink(filename, append = T)
unlink("algo")
sink("algo", append = T)
cat("# A unipartite network");cat('\n')
cat(paste("*Vertices",max(node_data$runningID)));cat('\n')
write.table(subset(node_data, select=c(runningID, InfomapName)), filename, sep = ' ', row.names = F, col.names = F, quote = F, append = T)
write.table(subset(node_data, select=c(runningID, InfomapName)), "algo", sep = ' ', row.names = F, col.names = F, quote = F, append = T)
cat("*Edges ");cat(nrow(links));cat('\n')
write.table(links, filename, sep = ' ', row.names = F, col.names = F, quote = F, append = T)
write.table(links, "algo", sep = ' ', row.names = F, col.names = F, quote = F, append = T)
sink.reset()
getwd()
source('Functions.R')
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
source('Functions.R')
x <- Infomap_wrapper_NoShuffled(Z = network, bipartite_groups = c('ProtoSpacer','Virus'), file_prefix = name)
